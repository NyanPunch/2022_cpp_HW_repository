/*******************************
프로그램명: 2차원 배열과 포인터 
작 성 자: 김경민 
작 성 일: 2022 03 18 
프로그램 설명: 2차원 배열에서 배열포인터와 포인터의 차이점을 이해한다 
********************************/ 
#include <iostream>
using namespace std;

int main() {
	int M[3][3] = { {1,2,3},{4,5,6},{7,8,9} };

	int(*ptr)[3];	//배열포인터
	int* p;			//포인터
	int** pt;		//이중포인터

	ptr = M;	//배열포인터 ptr이 배열 M의 주소를 받았다
	cout << "\nM주소 출력" << endl;
	cout << "ptr = " << ptr << " \nM = " << M << endl;	//M의 주소값 출력
	cout << "\n배열포인터 M+1 주소 출력" << endl;
	cout << "ptr + 1 = " << ptr+1 << " \nM + 1 = " << M+1 << endl;	//M+1번째 주소값 출력
	cout << "*(ptr+1) = " << *(ptr+1) << " \nptr[1] = " << ptr[1] << " \n*(M+1) = " << *(M+1) << endl;	//위와 같이 M+1번째 주소값 출력
	cout << "\nM+1 참조값 출력" << endl;
	cout << "**(ptr + 1) = " << **(ptr+1) << " \n**(M + 1) = " <<**(M+1)<< " \n*M[1] = " <<*M[1]<< " \nM[1][0] = " <<M[1][0]<< endl;	//M[1][0] 값 출력
	
	//배열 포인터의 M+1과 포인터 M+1의 값은 다르다
	
	p = M[0];	//포인터 p가 M의 주소를 받았다.
	cout << "\nM주소 출력" << endl;
	cout << "p = " << p << " \nM[0] = " << M[0] << " \n*M = " << *M << endl;	//M 주소 출력
	cout << "\n포인터 M+1 주소 출력" << endl;
	cout << "p+1 = " << p + 1 << " \nM[0]+1 = " << M[0] + 1 << " \n*M+1 = " << *M + 1 << endl;	//M+1 주소 출력
	cout << "\nM+1 참조값 출력" << endl;
	cout << "*(p+1) = " << *(p + 1) << " \n*(M[0]+1) = " << *(M[0] + 1) << " \n*(*M+1) = " << *(*M + 1) << endl;	//M+1번째 참조값 출력

	pt = &p;	//이중포인터 pt가 포인터 p를 가리킨다
	cout << "\n이중포인터\n";
	cout << "*pt = " << *pt << "\np = " << p << endl;	//포인터p가 가리키는 M의 주소 출력
	cout << "**pt = " << **pt << "\n*p = " << *p << endl;	//M의 1번째 참조값 출력
	return 0;
}

/*******************************
프로그램명: 실습 8-1
작 성 자: 2019038054 김경민
작 성 일: 2022 05 09
프로그램 설명: Subject Class Test
********************************/

#include <iostream>
#include <string>
using namespace std;

class Subject {
protected:
	string m_name;	//과목명
	int m_hakjum;	//학점
	string m_grade;	//등급
	float m_GPA;	//평점
public:
	void Initialize();	//멤버변수 초기화
	void Initialize(string, int, string); //인자값으로 멤버변수 초기화
	void InputValue(int&);
	void InputValue(string&);
	void InputData();	//멤버변수 값 입력 InputValue이용
	void PrintTitle();	//멤버변수에 대한 출력
	void PrintData();	//멤버변수 값 출력
	void CalcGPA();		//평점 계산
};

void main() {
	Subject sub1, sub2, sub3[2], *sub4;
	int i;

	sub1.Initialize(); //변수 초기화
	sub2.Initialize("범죄 심리학", 4, "A0");	//직접 변수 입력 초기화
	for (i = 0; i < 2; i++) 
		sub3[i].Initialize("컴퓨터 구조", 3, "C"); //배열 [0], [1] 동일한 값 입력
	sub4 = new Subject[2];	//동적 할당

	/* 1. 일반 객체 */
	sub1.InputData(); //변수 입력
	cout << "\n" << "sub1 정보" << "\n";
	sub1.PrintTitle();
	sub1.PrintData();

	/* 2. 인자값 받은 일반 객체 */
	cout << "\n" << "sub2 정보" << "\n";
	sub2.PrintTitle();
	sub2.PrintData();	//sub2.Initialize 출력 

	/* 3. 객체 배열 */
	cout << "\n" << "sub3 정보" << "\n";
	sub3[0].PrintTitle();	//타이틀 출력
	for (i = 0; i < 2; i++) sub3[i].PrintData(); // 배열 [0], [1] 출력

	/* 4. 객체 포인터 */
	for (i = 0; i < 2; i++)(sub4 + i)->InputData(); //두 정보의 변수 입력
	cout << "\n" << "sub4 정보" << "\n";
	sub4->PrintTitle();
	for (i = 0; i < 2; i++)(sub4 + i)->PrintData(); //두 정보 출력

	delete[] sub4;
}

void Subject::Initialize()
{
	m_name = " ";
	m_hakjum = 0;
	m_grade = " ";
	m_GPA = 0.0;
}

void Subject::Initialize(string name, int hakjum, string grade)
{
	m_name = name;
	m_hakjum = hakjum;
	m_grade = grade;
	CalcGPA(); //해당과목 평점 계산
}

inline void Subject::InputValue(int& i)
{
	cin >> i; cin.ignore(); //버퍼 정리
}

inline void Subject::InputValue(string& str)
{
	getline(cin, str);
}

void Subject::InputData()
{
	cout << "\n과목명 : "; InputValue(m_name);
	cout << "학점 : "; InputValue(m_hakjum);
	cout << "등급 : "; InputValue(m_grade);
	CalcGPA();
}

void Subject::PrintTitle()
{
	cout << "--------------------------------------------\n";
	cout << " 교과목명     학점수   등급     평점\n";
	cout << "--------------------------------------------\n";
}

void Subject::PrintData()
{
	cout << " " << m_name << "\t" << m_hakjum << "\t" << m_grade << "\t" << m_GPA << endl;
	cout << "--------------------------------------------\n";
}

void Subject::CalcGPA()
{
	if (m_grade == "A+")
		m_GPA = m_hakjum * 4.5;
	else if (m_grade == "A" || m_grade == "A0")
		m_GPA = m_hakjum * 4.0;
	else if (m_grade == "B+")
		m_GPA = m_hakjum * 3.5;
	else if (m_grade == "B" || m_grade == "B0")
		m_GPA = m_hakjum * 3.0;
	else if (m_grade == "C+")
		m_GPA = m_hakjum * 2.5;
	else if (m_grade == "C" || m_grade == "C0")
		m_GPA = m_hakjum * 2.0;
	else if (m_grade == "D+")
		m_GPA = m_hakjum * 1.5;
	else if (m_grade == "D" || m_grade == "D0")
		m_GPA = m_hakjum * 1.0;
	else if (m_grade == "F")
		m_GPA = m_hakjum * 0.0;
}